
local skynet = require("skynet")
local foreign = require("pyskynet.foreign")
local pyskynet_modify = require("pyskynet.modify")

local pyskynet = {}
pyskynet.foreign = foreign
pyskynet.skynet = skynet

pyskynet.start = skynet.start

------------------
-- service api ---
------------------

pyskynet.self = skynet.self

pyskynet.settings = (foreign.remoteunpack(pyskynet_modify.getlenv("settings")))

function pyskynet.newservice(name:String, ...:String)
	for i=1, select("#", ...) do
		local arg = select(i, ...)
		assert(type(arg)=="string", "newservice's arg must be string")
	end
	return skynet.newservice(name, ...)
end

function pyskynet.uniqueservice(name:String, ...:String)
	for i=1, select("#", ...) do
		local arg = select(i, ...)
		assert(type(arg)=="string", "uniqueservice's arg must be string")
	end
	return skynet.uniqueservice(name, ...)
end

function pyskynet.scriptservice(script:String, ...)
	const nDebugInfo = debug.getinfo(2)
	const nSourceName = nDebugInfo.source ..":".. nDebugInfo.currentline
	const nScriptIndex = pyskynet_modify.refscript(script)
	return pyskynet.newservice("script_service", nSourceName, tostring(nScriptIndex), ...)
end

return pyskynet
